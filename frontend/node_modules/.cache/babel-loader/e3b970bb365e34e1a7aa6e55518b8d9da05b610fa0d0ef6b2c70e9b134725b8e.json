{"ast":null,"code":"var _jsxFileName = \"/Users/Phillip/repos/vi-parser/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './components/header';\nimport Parser from './components/parser';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar XLSX = require(\"xlsx\");\nconst App = () => {\n  _s();\n  const [jsonData, setJsonData] = useState(null);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const parsedData = XLSX.utils.sheet_to_json(worksheet, {\n        header: 1\n      });\n      setJsonData(parsedData);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const saveConfiguration = columnMappings => {\n    axios.post('/api/save-configuration', {\n      columnMappings\n    }).then(response => {\n      console.log('Configuration saved successfully!');\n    }).catch(error => {\n      console.error('Error saving configuration:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Parser, {\n      onFileUpload: handleFileUpload,\n      jsonData: jsonData,\n      onSaveConfiguration: saveConfiguration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"j3ZU+r56R/sNKtjNBn60f1v4mk4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Parser","axios","jsxDEV","_jsxDEV","XLSX","require","App","_s","jsonData","setJsonData","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","data","Uint8Array","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","parsedData","utils","sheet_to_json","header","readAsArrayBuffer","saveConfiguration","columnMappings","post","then","response","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onFileUpload","onSaveConfiguration","_c","$RefreshReg$"],"sources":["/Users/Phillip/repos/vi-parser/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './components/header';\nimport Parser from './components/parser';\nimport axios from 'axios';\nvar XLSX = require(\"xlsx\");\n\nconst App = () => {\n  const [jsonData, setJsonData] = useState(null);\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, { type: 'array' });\n\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n\n      const parsedData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n      setJsonData(parsedData);\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  const saveConfiguration = (columnMappings) => {\n    axios.post('/api/save-configuration', { columnMappings })\n      .then((response) => {\n        console.log('Configuration saved successfully!');\n      })\n      .catch((error) => {\n        console.error('Error saving configuration:', error);\n      });\n  };\n\n  return (\n    <div>\n      <Header />\n      <Parser onFileUpload={handleFileUpload} jsonData={jsonData} onSaveConfiguration={saveConfiguration} />\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMY,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAE/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACrB,MAAMC,IAAI,GAAG,IAAIC,UAAU,CAACF,CAAC,CAACL,MAAM,CAACQ,MAAM,CAAC;MAC5C,MAAMC,QAAQ,GAAGlB,IAAI,CAACmB,IAAI,CAACJ,IAAI,EAAE;QAAEK,IAAI,EAAE;MAAQ,CAAC,CAAC;MAEnD,MAAMC,SAAS,GAAGH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;MACxC,MAAMC,SAAS,GAAGL,QAAQ,CAACM,MAAM,CAACH,SAAS,CAAC;MAE5C,MAAMI,UAAU,GAAGzB,IAAI,CAAC0B,KAAK,CAACC,aAAa,CAACJ,SAAS,EAAE;QAAEK,MAAM,EAAE;MAAE,CAAC,CAAC;MACrEvB,WAAW,CAACoB,UAAU,CAAC;IACzB,CAAC;IAEDd,MAAM,CAACkB,iBAAiB,CAACrB,IAAI,CAAC;EAChC,CAAC;EAED,MAAMsB,iBAAiB,GAAIC,cAAc,IAAK;IAC5ClC,KAAK,CAACmC,IAAI,CAAC,yBAAyB,EAAE;MAAED;IAAe,CAAC,CAAC,CACtDE,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAClD,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CAAC;EACN,CAAC;EAED,oBACEvC,OAAA;IAAAwC,QAAA,gBACExC,OAAA,CAACJ,MAAM;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV5C,OAAA,CAACH,MAAM;MAACgD,YAAY,EAAEtC,gBAAiB;MAACF,QAAQ,EAAEA,QAAS;MAACyC,mBAAmB,EAAEf;IAAkB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnG,CAAC;AAEV,CAAC;AAACxC,EAAA,CArCID,GAAG;AAAA4C,EAAA,GAAH5C,GAAG;AAuCT,eAAeA,GAAG;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}