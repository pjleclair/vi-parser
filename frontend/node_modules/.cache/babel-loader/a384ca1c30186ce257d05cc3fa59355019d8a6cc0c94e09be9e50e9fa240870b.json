{"ast":null,"code":"var _jsxFileName = \"/Users/Phillip/repos/vi-parser/frontend/src/components/fileprocessor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileProcessor = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [configurations, setConfigurations] = useState([]);\n  const [selectedConfiguration, setSelectedConfiguration] = useState(null);\n  useEffect(() => {\n    fetchConfigurations();\n  }, []);\n  const fetchConfigurations = () => {\n    axios.get('/api/configurations').then(response => {\n      setConfigurations(response.data.configurations);\n    }).catch(error => {\n      console.log('Error fetching configurations:', error);\n    });\n  };\n  const handleConfigurationSelect = event => {\n    const selectedConfigId = event.target.value;\n    const selectedConfig = configurations.find(config => config._id === selectedConfigId);\n    setSelectedConfiguration(selectedConfig);\n  };\n  const handleFileUpload = event => {\n    const uploadedFile = event.target.files[0];\n    setFile(uploadedFile);\n  };\n  const handleUpload = async () => {\n    if (!file || !selectedConfiguration) {\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('configuration', JSON.stringify(selectedConfiguration));\n    try {\n      const response = await axios.post('/api/upload', formData);\n      console.log('File upload successful:', response.data);\n      // Perform further processing or handle the server response here\n    } catch (error) {\n      console.log('Error uploading file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"File Processor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Configuration:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), configurations && configurations.length > 0 ? /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleConfigurationSelect,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), configurations.map(config => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: config._id,\n          children: config.name\n        }, config._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No configurations found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload File:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx,.xls\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(FileProcessor, \"jkgapLr+XKf2IojbCfwamBOXeZY=\");\n_c = FileProcessor;\nexport default FileProcessor;\nvar _c;\n$RefreshReg$(_c, \"FileProcessor\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","FileProcessor","_s","file","setFile","configurations","setConfigurations","selectedConfiguration","setSelectedConfiguration","fetchConfigurations","get","then","response","data","catch","error","console","log","handleConfigurationSelect","event","selectedConfigId","target","value","selectedConfig","find","config","_id","handleFileUpload","uploadedFile","files","handleUpload","formData","FormData","append","JSON","stringify","post","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onChange","map","name","type","accept","onClick","_c","$RefreshReg$"],"sources":["/Users/Phillip/repos/vi-parser/frontend/src/components/fileprocessor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst FileProcessor = () => {\n  const [file, setFile] = useState(null);\n  const [configurations, setConfigurations] = useState([]);\n  const [selectedConfiguration, setSelectedConfiguration] = useState(null);\n\n  useEffect(() => {\n    fetchConfigurations();\n  }, []);\n\n  const fetchConfigurations = () => {\n      axios.get('/api/configurations')\n      .then((response) => {\n        setConfigurations(response.data.configurations)\n      })\n      .catch((error) => {\n        console.log('Error fetching configurations:', error);\n    });\n  };\n\n  const handleConfigurationSelect = (event) => {\n    const selectedConfigId = event.target.value;\n    const selectedConfig = configurations.find((config) => config._id === selectedConfigId);\n    setSelectedConfiguration(selectedConfig);\n  };\n\n  const handleFileUpload = (event) => {\n    const uploadedFile = event.target.files[0];\n    setFile(uploadedFile);\n  };\n\n  const handleUpload = async () => {\n    if (!file || !selectedConfiguration) {\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('configuration', JSON.stringify(selectedConfiguration));\n\n    try {\n      const response = await axios.post('/api/upload', formData);\n      console.log('File upload successful:', response.data);\n      // Perform further processing or handle the server response here\n    } catch (error) {\n      console.log('Error uploading file:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>File Processor</h1>\n      <div>\n        <h2>Select Configuration:</h2>\n        {configurations && configurations.length > 0 ? (\n          <select onChange={handleConfigurationSelect}>\n            <option value=\"\">Select Configuration</option>\n            {configurations.map((config) => (\n              <option key={config._id} value={config._id}>\n                {config.name}\n              </option>\n            ))}\n          </select>\n        ) : (\n          <p>No configurations found.</p>\n        )}\n      </div>\n      <div>\n        <h2>Upload File:</h2>\n        <input type=\"file\" accept=\".xlsx,.xls\" onChange={handleFileUpload} />\n      </div>\n      <button onClick={handleUpload}>Upload</button>\n    </div>\n  );\n};\n\nexport default FileProcessor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}